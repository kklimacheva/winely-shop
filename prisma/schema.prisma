// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String
  isAdmin Boolean
  orders  Order[]
}

model Product {
  id     Int            @id @default(autoincrement())
  wineId Int
  wine   Wine           @relation(fields: [wineId], references: [id])
  price  Float
  orders OrderProduct[]
}

model Wine {
  id             Int                 @id @default(autoincrement())
  name           String              @unique
  manufacturer   CountryManufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId Int
  wineType       WineType            @relation(fields: [wineTypeId], references: [id])
  wineTypeId     Int
  Product        Product[]
}

model CountryManufacturer {
  id         Int    @id @default(autoincrement())
  countyCode String @unique
  name       String @unique
  Wine       Wine[]
}

model WineType {
  id   Int    @id @default(autoincrement())
  name String @unique
  Wine Wine[]
}

model Article {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  content     String
  articleTags ArticleTag[]
}

model Tag {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  articles ArticleTag[]
}

model ArticleTag {
  id        Int     @id @default(autoincrement())
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
}

model Order {
  id       Int            @id @default(autoincrement())
  date     DateTime       @default(now())
  total    Float
  client   Client         @relation(fields: [clientId], references: [id])
  clientId Int
  products OrderProduct[]
}
